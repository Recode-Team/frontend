{"ast":null,"code":"const assign = require('../util/assign');\nmodule.exports = request => {\n  const Subscription = {\n    name: 'Subscription',\n    path: 'subscriptions',\n    authenticate: function () {\n      return request(assign(Subscription._authenticate(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    cancelForMe: function () {\n      return request(assign(Subscription._cancelForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    countForMe: function () {\n      return request(assign(Subscription._countForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    getForMe: function () {\n      return request(assign(Subscription._getForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    listForMe: function () {\n      return request(assign(Subscription._listForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    scheduleForMe: function () {\n      return request(assign(Subscription._scheduleForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    updateCancellationForMe: function () {\n      return request(assign(Subscription._updateCancellationForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    updateForMe: function () {\n      return request(assign(Subscription._updateForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    }\n  };\n  Subscription._authenticate = function () {\n    return {\n      modelName: Subscription.name,\n      methodName: 'authenticate',\n      httpMethod: 'POST',\n      path: '/v1/subscriptions/{subscriptionId}/auth',\n      params: ['subscriptionId']\n    };\n  };\n  Subscription._cancelForMe = function () {\n    return {\n      modelName: Subscription.name,\n      methodName: 'cancelForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/subscriptions/{subscriptionId}/cancellation',\n      params: ['subscriptionId']\n    };\n  };\n  Subscription._countForMe = function () {\n    return {\n      modelName: Subscription.name,\n      methodName: 'countForMe',\n      httpMethod: 'GET',\n      path: '/v1/me/subscriptions/count',\n      params: []\n    };\n  };\n  Subscription._getForMe = function () {\n    return {\n      modelName: Subscription.name,\n      methodName: 'getForMe',\n      httpMethod: 'GET',\n      path: '/v1/me/subscriptions/{subscriptionId}',\n      params: ['subscriptionId']\n    };\n  };\n  Subscription._listForMe = function () {\n    return {\n      modelName: Subscription.name,\n      methodName: 'listForMe',\n      httpMethod: 'GET',\n      path: '/v1/me/subscriptions',\n      params: []\n    };\n  };\n  Subscription._scheduleForMe = function () {\n    return {\n      modelName: Subscription.name,\n      methodName: 'scheduleForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/subscriptions/{subscriptionId}/scheduled',\n      params: ['subscriptionId']\n    };\n  };\n  Subscription._updateCancellationForMe = function () {\n    return {\n      modelName: Subscription.name,\n      methodName: 'updateCancellationForMe',\n      httpMethod: 'PUT',\n      path: '/v1/me/subscriptions/{subscriptionId}/cancellation',\n      params: ['subscriptionId']\n    };\n  };\n  Subscription._updateForMe = function () {\n    return {\n      modelName: Subscription.name,\n      methodName: 'updateForMe',\n      httpMethod: 'PUT',\n      path: '/v1/me/subscriptions/{subscriptionId}',\n      params: ['subscriptionId']\n    };\n  };\n  return Subscription;\n};","map":{"version":3,"names":["assign","require","module","exports","request","Subscription","name","path","authenticate","_authenticate","args","Array","prototype","slice","call","arguments","cancelForMe","_cancelForMe","countForMe","_countForMe","getForMe","_getForMe","listForMe","_listForMe","scheduleForMe","_scheduleForMe","updateCancellationForMe","_updateCancellationForMe","updateForMe","_updateForMe","modelName","methodName","httpMethod","params"],"sources":["D:/project/Recode-Team/Frontend/node_modules/clayful/lib/models-js/subscription.js"],"sourcesContent":["const assign = require('../util/assign');\r\n\r\nmodule.exports = request => {\r\n\r\n\tconst Subscription = {\r\n\t\tname: 'Subscription',\r\n\t\tpath: 'subscriptions',\r\n\t\tauthenticate: function() {\r\n\t\t\treturn request(assign(Subscription._authenticate(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tcancelForMe: function() {\r\n\t\t\treturn request(assign(Subscription._cancelForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tcountForMe: function() {\r\n\t\t\treturn request(assign(Subscription._countForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tgetForMe: function() {\r\n\t\t\treturn request(assign(Subscription._getForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tlistForMe: function() {\r\n\t\t\treturn request(assign(Subscription._listForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tscheduleForMe: function() {\r\n\t\t\treturn request(assign(Subscription._scheduleForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tupdateCancellationForMe: function() {\r\n\t\t\treturn request(assign(Subscription._updateCancellationForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tupdateForMe: function() {\r\n\t\t\treturn request(assign(Subscription._updateForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t};\r\n\r\n\tSubscription._authenticate = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Subscription.name,\r\n\t\t\tmethodName:     'authenticate',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/subscriptions/{subscriptionId}/auth',\r\n\t\t\tparams:         ['subscriptionId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tSubscription._cancelForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Subscription.name,\r\n\t\t\tmethodName:     'cancelForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/subscriptions/{subscriptionId}/cancellation',\r\n\t\t\tparams:         ['subscriptionId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tSubscription._countForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Subscription.name,\r\n\t\t\tmethodName:     'countForMe',\r\n\t\t\thttpMethod:     'GET',\r\n\t\t\tpath:           '/v1/me/subscriptions/count',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tSubscription._getForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Subscription.name,\r\n\t\t\tmethodName:     'getForMe',\r\n\t\t\thttpMethod:     'GET',\r\n\t\t\tpath:           '/v1/me/subscriptions/{subscriptionId}',\r\n\t\t\tparams:         ['subscriptionId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tSubscription._listForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Subscription.name,\r\n\t\t\tmethodName:     'listForMe',\r\n\t\t\thttpMethod:     'GET',\r\n\t\t\tpath:           '/v1/me/subscriptions',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tSubscription._scheduleForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Subscription.name,\r\n\t\t\tmethodName:     'scheduleForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/subscriptions/{subscriptionId}/scheduled',\r\n\t\t\tparams:         ['subscriptionId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tSubscription._updateCancellationForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Subscription.name,\r\n\t\t\tmethodName:     'updateCancellationForMe',\r\n\t\t\thttpMethod:     'PUT',\r\n\t\t\tpath:           '/v1/me/subscriptions/{subscriptionId}/cancellation',\r\n\t\t\tparams:         ['subscriptionId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tSubscription._updateForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Subscription.name,\r\n\t\t\tmethodName:     'updateForMe',\r\n\t\t\thttpMethod:     'PUT',\r\n\t\t\tpath:           '/v1/me/subscriptions/{subscriptionId}',\r\n\t\t\tparams:         ['subscriptionId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\treturn Subscription;\r\n\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}