{"ast":null,"code":"const assign = require('../util/assign');\nmodule.exports = request => {\n  const ReviewComment = {\n    name: 'ReviewComment',\n    path: 'products/reviews/comments',\n    cancelFlagForMe: function () {\n      return request(assign(ReviewComment._cancelFlagForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    count: function () {\n      return request(assign(ReviewComment._count(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    createForMe: function () {\n      return request(assign(ReviewComment._createForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    deleteForMe: function () {\n      return request(assign(ReviewComment._deleteForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    flagForMe: function () {\n      return request(assign(ReviewComment._flagForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    get: function () {\n      return request(assign(ReviewComment._get(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    list: function () {\n      return request(assign(ReviewComment._list(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    updateForMe: function () {\n      return request(assign(ReviewComment._updateForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    }\n  };\n  ReviewComment._cancelFlagForMe = function () {\n    return {\n      modelName: ReviewComment.name,\n      methodName: 'cancelFlagForMe',\n      httpMethod: 'DELETE',\n      path: '/v1/me/products/reviews/comments/{reviewCommentId}/flags',\n      params: ['reviewCommentId']\n    };\n  };\n  ReviewComment._count = function () {\n    return {\n      modelName: ReviewComment.name,\n      methodName: 'count',\n      httpMethod: 'GET',\n      path: '/v1/products/reviews/comments/count',\n      params: []\n    };\n  };\n  ReviewComment._createForMe = function () {\n    return {\n      modelName: ReviewComment.name,\n      methodName: 'createForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/products/reviews/comments',\n      params: []\n    };\n  };\n  ReviewComment._deleteForMe = function () {\n    return {\n      modelName: ReviewComment.name,\n      methodName: 'deleteForMe',\n      httpMethod: 'DELETE',\n      path: '/v1/me/products/reviews/comments/{reviewCommentId}',\n      params: ['reviewCommentId']\n    };\n  };\n  ReviewComment._flagForMe = function () {\n    return {\n      modelName: ReviewComment.name,\n      methodName: 'flagForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/products/reviews/comments/{reviewCommentId}/flags',\n      params: ['reviewCommentId'],\n      withoutPayload: true\n    };\n  };\n  ReviewComment._get = function () {\n    return {\n      modelName: ReviewComment.name,\n      methodName: 'get',\n      httpMethod: 'GET',\n      path: '/v1/products/reviews/comments/{reviewCommentId}',\n      params: ['reviewCommentId']\n    };\n  };\n  ReviewComment._list = function () {\n    return {\n      modelName: ReviewComment.name,\n      methodName: 'list',\n      httpMethod: 'GET',\n      path: '/v1/products/reviews/comments',\n      params: []\n    };\n  };\n  ReviewComment._updateForMe = function () {\n    return {\n      modelName: ReviewComment.name,\n      methodName: 'updateForMe',\n      httpMethod: 'PUT',\n      path: '/v1/me/products/reviews/comments/{reviewCommentId}',\n      params: ['reviewCommentId']\n    };\n  };\n  return ReviewComment;\n};","map":{"version":3,"names":["assign","require","module","exports","request","ReviewComment","name","path","cancelFlagForMe","_cancelFlagForMe","args","Array","prototype","slice","call","arguments","count","_count","createForMe","_createForMe","deleteForMe","_deleteForMe","flagForMe","_flagForMe","get","_get","list","_list","updateForMe","_updateForMe","modelName","methodName","httpMethod","params","withoutPayload"],"sources":["D:/project/Recode-Team/Frontend/node_modules/clayful/lib/models-js/reviewComment.js"],"sourcesContent":["const assign = require('../util/assign');\r\n\r\nmodule.exports = request => {\r\n\r\n\tconst ReviewComment = {\r\n\t\tname: 'ReviewComment',\r\n\t\tpath: 'products/reviews/comments',\r\n\t\tcancelFlagForMe: function() {\r\n\t\t\treturn request(assign(ReviewComment._cancelFlagForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tcount: function() {\r\n\t\t\treturn request(assign(ReviewComment._count(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tcreateForMe: function() {\r\n\t\t\treturn request(assign(ReviewComment._createForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tdeleteForMe: function() {\r\n\t\t\treturn request(assign(ReviewComment._deleteForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tflagForMe: function() {\r\n\t\t\treturn request(assign(ReviewComment._flagForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tget: function() {\r\n\t\t\treturn request(assign(ReviewComment._get(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tlist: function() {\r\n\t\t\treturn request(assign(ReviewComment._list(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tupdateForMe: function() {\r\n\t\t\treturn request(assign(ReviewComment._updateForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t};\r\n\r\n\tReviewComment._cancelFlagForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      ReviewComment.name,\r\n\t\t\tmethodName:     'cancelFlagForMe',\r\n\t\t\thttpMethod:     'DELETE',\r\n\t\t\tpath:           '/v1/me/products/reviews/comments/{reviewCommentId}/flags',\r\n\t\t\tparams:         ['reviewCommentId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tReviewComment._count = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      ReviewComment.name,\r\n\t\t\tmethodName:     'count',\r\n\t\t\thttpMethod:     'GET',\r\n\t\t\tpath:           '/v1/products/reviews/comments/count',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tReviewComment._createForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      ReviewComment.name,\r\n\t\t\tmethodName:     'createForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/products/reviews/comments',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tReviewComment._deleteForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      ReviewComment.name,\r\n\t\t\tmethodName:     'deleteForMe',\r\n\t\t\thttpMethod:     'DELETE',\r\n\t\t\tpath:           '/v1/me/products/reviews/comments/{reviewCommentId}',\r\n\t\t\tparams:         ['reviewCommentId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tReviewComment._flagForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      ReviewComment.name,\r\n\t\t\tmethodName:     'flagForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/products/reviews/comments/{reviewCommentId}/flags',\r\n\t\t\tparams:         ['reviewCommentId', ],\r\n\t\t\twithoutPayload: true,\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tReviewComment._get = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      ReviewComment.name,\r\n\t\t\tmethodName:     'get',\r\n\t\t\thttpMethod:     'GET',\r\n\t\t\tpath:           '/v1/products/reviews/comments/{reviewCommentId}',\r\n\t\t\tparams:         ['reviewCommentId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tReviewComment._list = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      ReviewComment.name,\r\n\t\t\tmethodName:     'list',\r\n\t\t\thttpMethod:     'GET',\r\n\t\t\tpath:           '/v1/products/reviews/comments',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tReviewComment._updateForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      ReviewComment.name,\r\n\t\t\tmethodName:     'updateForMe',\r\n\t\t\thttpMethod:     'PUT',\r\n\t\t\tpath:           '/v1/me/products/reviews/comments/{reviewCommentId}',\r\n\t\t\tparams:         ['reviewCommentId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\treturn ReviewComment;\r\n\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}