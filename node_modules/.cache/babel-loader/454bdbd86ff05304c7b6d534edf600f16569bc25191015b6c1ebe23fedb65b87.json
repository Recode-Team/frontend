{"ast":null,"code":"const assign = require('../util/assign');\nmodule.exports = request => {\n  const Cart = {\n    name: 'Cart',\n    path: '',\n    addItemForMe: function () {\n      return request(assign(Cart._addItemForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    checkoutAsNonRegisteredForMe: function () {\n      return request(assign(Cart._checkoutAsNonRegisteredForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    checkoutForMe: function () {\n      return request(assign(Cart._checkoutForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    countItemsForMe: function () {\n      return request(assign(Cart._countItemsForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    deleteItemForMe: function () {\n      return request(assign(Cart._deleteItemForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    emptyForMe: function () {\n      return request(assign(Cart._emptyForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    getAsNonRegisteredForMe: function () {\n      return request(assign(Cart._getAsNonRegisteredForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    getForMe: function () {\n      return request(assign(Cart._getForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    },\n    updateItemForMe: function () {\n      return request(assign(Cart._updateItemForMe(), {\n        args: Array.prototype.slice.call(arguments)\n      }));\n    }\n  };\n  Cart._addItemForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'addItemForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/cart/items',\n      params: []\n    };\n  };\n  Cart._checkoutAsNonRegisteredForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'checkoutAsNonRegisteredForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/non-registered/cart/checkout/{type}',\n      params: ['type']\n    };\n  };\n  Cart._checkoutForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'checkoutForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/cart/checkout/{type}',\n      params: ['type']\n    };\n  };\n  Cart._countItemsForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'countItemsForMe',\n      httpMethod: 'GET',\n      path: '/v1/me/cart/items/count',\n      params: []\n    };\n  };\n  Cart._deleteItemForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'deleteItemForMe',\n      httpMethod: 'DELETE',\n      path: '/v1/me/cart/items/{itemId}',\n      params: ['itemId']\n    };\n  };\n  Cart._emptyForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'emptyForMe',\n      httpMethod: 'DELETE',\n      path: '/v1/me/cart/items',\n      params: []\n    };\n  };\n  Cart._getAsNonRegisteredForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'getAsNonRegisteredForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/non-registered/cart',\n      params: []\n    };\n  };\n  Cart._getForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'getForMe',\n      httpMethod: 'POST',\n      path: '/v1/me/cart',\n      params: []\n    };\n  };\n  Cart._updateItemForMe = function () {\n    return {\n      modelName: Cart.name,\n      methodName: 'updateItemForMe',\n      httpMethod: 'PUT',\n      path: '/v1/me/cart/items/{itemId}',\n      params: ['itemId']\n    };\n  };\n  return Cart;\n};","map":{"version":3,"names":["assign","require","module","exports","request","Cart","name","path","addItemForMe","_addItemForMe","args","Array","prototype","slice","call","arguments","checkoutAsNonRegisteredForMe","_checkoutAsNonRegisteredForMe","checkoutForMe","_checkoutForMe","countItemsForMe","_countItemsForMe","deleteItemForMe","_deleteItemForMe","emptyForMe","_emptyForMe","getAsNonRegisteredForMe","_getAsNonRegisteredForMe","getForMe","_getForMe","updateItemForMe","_updateItemForMe","modelName","methodName","httpMethod","params"],"sources":["D:/project/Recode-Team/Frontend/node_modules/clayful/lib/models-js/cart.js"],"sourcesContent":["const assign = require('../util/assign');\r\n\r\nmodule.exports = request => {\r\n\r\n\tconst Cart = {\r\n\t\tname: 'Cart',\r\n\t\tpath: '',\r\n\t\taddItemForMe: function() {\r\n\t\t\treturn request(assign(Cart._addItemForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tcheckoutAsNonRegisteredForMe: function() {\r\n\t\t\treturn request(assign(Cart._checkoutAsNonRegisteredForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tcheckoutForMe: function() {\r\n\t\t\treturn request(assign(Cart._checkoutForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tcountItemsForMe: function() {\r\n\t\t\treturn request(assign(Cart._countItemsForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tdeleteItemForMe: function() {\r\n\t\t\treturn request(assign(Cart._deleteItemForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\temptyForMe: function() {\r\n\t\t\treturn request(assign(Cart._emptyForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tgetAsNonRegisteredForMe: function() {\r\n\t\t\treturn request(assign(Cart._getAsNonRegisteredForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tgetForMe: function() {\r\n\t\t\treturn request(assign(Cart._getForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t\tupdateItemForMe: function() {\r\n\t\t\treturn request(assign(Cart._updateItemForMe(), { args: Array.prototype.slice.call(arguments) }));\r\n\t\t},\r\n\t};\r\n\r\n\tCart._addItemForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'addItemForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/cart/items',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tCart._checkoutAsNonRegisteredForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'checkoutAsNonRegisteredForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/non-registered/cart/checkout/{type}',\r\n\t\t\tparams:         ['type', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tCart._checkoutForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'checkoutForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/cart/checkout/{type}',\r\n\t\t\tparams:         ['type', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tCart._countItemsForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'countItemsForMe',\r\n\t\t\thttpMethod:     'GET',\r\n\t\t\tpath:           '/v1/me/cart/items/count',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tCart._deleteItemForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'deleteItemForMe',\r\n\t\t\thttpMethod:     'DELETE',\r\n\t\t\tpath:           '/v1/me/cart/items/{itemId}',\r\n\t\t\tparams:         ['itemId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tCart._emptyForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'emptyForMe',\r\n\t\t\thttpMethod:     'DELETE',\r\n\t\t\tpath:           '/v1/me/cart/items',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tCart._getAsNonRegisteredForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'getAsNonRegisteredForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/non-registered/cart',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tCart._getForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'getForMe',\r\n\t\t\thttpMethod:     'POST',\r\n\t\t\tpath:           '/v1/me/cart',\r\n\t\t\tparams:         [],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tCart._updateItemForMe = function() {\r\n\r\n\t\treturn {\r\n\t\t\tmodelName:      Cart.name,\r\n\t\t\tmethodName:     'updateItemForMe',\r\n\t\t\thttpMethod:     'PUT',\r\n\t\t\tpath:           '/v1/me/cart/items/{itemId}',\r\n\t\t\tparams:         ['itemId', ],\r\n\t\t};\r\n\r\n\t};\r\n\r\n\treturn Cart;\r\n\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}