{"ast":null,"code":"const ClayfulError = require('../clayful-error');\nconst assign = require('../util/assign');\nconst Clayful = {\n  baseUrl: 'https://api.clayful.io',\n  // base url for API request\n  defaultHeaders: {},\n  // extra headers to extend default request headers\n  plugins: {\n    request: null // request middleware\n  },\n\n  listeners: {\n    request: [],\n    response: []\n  },\n  Promise: typeof Promise === 'function' ? Promise : null\n};\nClayful.optionsToHeaders = function () {\n  let o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const headers = {};\n  if (o.language) {\n    headers['Accept-Language'] = o.language;\n  }\n  if (o.currency) {\n    headers['Accept-Currency'] = o.currency;\n  }\n  if (o.timeZone) {\n    headers['Accept-Time-Zone'] = o.timeZone;\n  }\n  if (o.client) {\n    headers['Authorization'] = `Bearer ${o.client}`;\n  }\n  if (o.customer) {\n    headers['Authorization-Customer'] = o.customer;\n  }\n  if (o.reCAPTCHA) {\n    headers['reCAPTCHA-Response'] = o.reCAPTCHA;\n  }\n  if (o.debugLanguage) {\n    headers['Accept-Debug-Language'] = o.debugLanguage;\n  }\n  if (o.headers) {\n    assign(headers, o.headers);\n  }\n  return headers;\n};\nClayful.getEndpoint = path => `${Clayful.baseUrl}${path}`;\nClayful.normalizeQueryValues = function () {\n  let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return query;\n};\nClayful.wrapRequestCallback = extracted => function (err) {\n  let response = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (err) {\n    if (err.isClayful) {\n      // ClayfulError case\n      extracted.error = err;\n      Clayful.trigger('response', extracted);\n    }\n  } else {\n    // Success case\n    extracted.response = response;\n    Clayful.trigger('response', extracted);\n  }\n  extracted.callback(err, response, extracted);\n};\nClayful.extractRequestArguments = options => {\n  const result = {\n    httpMethod: options.httpMethod,\n    payload: null,\n    meta: {}\n  };\n  const rest = options.args.slice(options.params.length);\n  result.requestUrl = options.params.reduce((requestUrl, param, i) => requestUrl.replace(`{${param}}`, options.args[i]), options.path);\n  result.callback = rest.pop();\n  if (typeof result.callback !== 'function') {\n    rest.push(result.callback); // Restore rest array\n    result.callback = () => {}; // Put an empty function as default if the last argument isn't a function,\n    result.callback.Promise = Clayful.Promise;\n  }\n  if ((options.httpMethod === 'POST' || options.httpMethod === 'PUT') && !options.withoutPayload) {\n    result.payload = rest.shift() || null;\n  }\n  const queryHeaders = rest.shift() || {};\n  result.query = Clayful.normalizeQueryValues(queryHeaders.query || {});\n  result.headers = Clayful.optionsToHeaders(queryHeaders || {});\n\n  // Set request meta\n  result.meta = queryHeaders.meta || {};\n  return result;\n};\nClayful.callAPI = options => {\n  const request = Clayful.plugins.request;\n  const extracted = Clayful.extractRequestArguments(options);\n  assign(extracted, {\n    requestUrl: Clayful.getEndpoint(extracted.requestUrl),\n    modelName: options.modelName,\n    methodName: options.methodName,\n    usesFormData: options.usesFormData,\n    error: null,\n    response: null\n  });\n\n  // Extend & overide default headers before making a request\n  const copied = assign({}, Clayful.defaultHeaders);\n  extracted.headers = assign(copied, extracted.headers);\n  Clayful.trigger('request', extracted);\n  const wrappedCallback = Clayful.wrapRequestCallback(extracted);\n  if (extracted.callback.Promise) {\n    wrappedCallback.Promise = extracted.callback.Promise;\n  }\n\n  // ClayfulError should be used for generating API errors from Clayful API\n  return request(extracted, ClayfulError, wrappedCallback);\n};\n\n// Abstracted API request method\nClayful.request = (request, callback) => {\n  const api = request.module || '';\n  const [model, method] = api.split('.');\n  if (!api) throw new Error(`Request module name is required.`);\n  if (!Clayful[model]) throw new Error(`Model '${model}' doesn't exist.`);\n  if (!Clayful[model][method]) throw new Error(`Method '${method}' doesn't exist in ${model}.`);\n  const apiSpec = Clayful[model]['_' + method]();\n\n  // Set default values\n  request.params = request.params || {};\n  request.payload = request.payload || null;\n  // Copy `request.options` and set `query` and `headers`\n  request.options = assign({\n    query: request.query || {},\n    headers: request.headers || {}\n  }, request.options || {});\n\n  // Build arguments.\n  // Start with URL params.\n  const args = apiSpec.params.map(name => request.params[name] || '');\n\n  // Set payload if it's needed\n  if ((apiSpec.httpMethod === 'POST' || apiSpec.httpMethod === 'PUT') && !apiSpec.withoutPayload) {\n    args.push(request.payload);\n  }\n\n  // Set query and headers\n  args.push(request.options);\n\n  // Set callback\n  if (callback) {\n    args.push(callback);\n  }\n\n  // Call API\n  return Clayful.callAPI(assign(apiSpec, {\n    args\n  }));\n};\n\n// Set model APIs\nClayful.setModels = models => {\n  const allModels = models(Clayful.callAPI);\n\n  // Get all models - it can be useful to generate Promisified APIs\n  Clayful.models = () => {\n    const models = [];\n    for (const modelName in allModels) {\n      models.push(modelName);\n    }\n    return models;\n  };\n\n  // Extend clayful object with models and methods\n  return assign(Clayful, allModels);\n};\n\n// Configures SDK options\nClayful.config = function () {\n  let o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return assign(Clayful.defaultHeaders, Clayful.optionsToHeaders(o));\n};\n\n// Install plugins. e.g., request middleware\nClayful.install = (plugin, options) => {\n  Clayful.plugins[plugin] = Clayful.plugins[plugin] ? Clayful.plugins[plugin](options) :\n  // use plug-in as a factory function\n  options; // or use options as a factory function or a function\n};\n\n// Add event listeners\nClayful.on = (eventName, callback) => {\n  const listeners = Clayful.listeners[eventName];\n  if (!listeners) return;\n  listeners.push(callback);\n};\n\n// Removes event listeners\nClayful.off = (eventName, callback) => {\n  const listeners = Clayful.listeners[eventName];\n  const index = listeners.indexOf(callback);\n  listeners.splice(index, 1);\n};\n\n// Triggers event listeners\nClayful.trigger = (eventName, data) => {\n  const listeners = Clayful.listeners[eventName];\n  for (let i = 0; i < listeners.length; i++) {\n    listeners[i](data);\n  }\n};\n\n// Utilities\n\nClayful.formatImageUrl = function (baseUrl) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const query = [];\n  for (const key in options) {\n    query.push(`${key}=${options[key]}`);\n  }\n  const queryAsString = query.length ? '?' + query.join('&') : '';\n  return baseUrl + queryAsString;\n};\nClayful.formatNumber = function (number) {\n  let currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof number !== 'number') {\n    return '';\n  }\n  const {\n    precision,\n    delimiter = {}\n  } = currency;\n  const {\n    thousands = '',\n    decimal = '.'\n  } = delimiter;\n  if (typeof precision === 'number') {\n    const n = Math.pow(10, precision);\n    number = Math.round(number * n) / n;\n  }\n  let [a, b = ''] = String(number).split('.');\n  const reversedArray = a.split('').reverse();\n  const segments = [];\n  while (reversedArray.length) {\n    segments.unshift(reversedArray.splice(0, 3).reverse().join(''));\n  }\n  if (precision) {\n    const diff = precision - b.length;\n    for (let i = 0; i < diff; i++) {\n      b += '0';\n    }\n  }\n  return [segments.join(thousands), b].join(b ? decimal : '');\n};\nClayful.formatPrice = function (number) {\n  let currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const formattedNumber = Clayful.formatNumber(number, currency);\n  if (!formattedNumber) {\n    return '';\n  }\n  const {\n    symbol = '',\n    format = '{price}'\n  } = currency;\n  return format.replace('{symbol}', symbol).replace('{price}', formattedNumber);\n};\nmodule.exports = Clayful;","map":{"version":3,"names":["ClayfulError","require","assign","Clayful","baseUrl","defaultHeaders","plugins","request","listeners","response","Promise","optionsToHeaders","o","arguments","length","undefined","headers","language","currency","timeZone","client","customer","reCAPTCHA","debugLanguage","getEndpoint","path","normalizeQueryValues","query","wrapRequestCallback","extracted","err","isClayful","error","trigger","callback","extractRequestArguments","options","result","httpMethod","payload","meta","rest","args","slice","params","requestUrl","reduce","param","i","replace","pop","push","withoutPayload","shift","queryHeaders","callAPI","modelName","methodName","usesFormData","copied","wrappedCallback","api","module","model","method","split","Error","apiSpec","map","name","setModels","models","allModels","config","install","plugin","on","eventName","off","index","indexOf","splice","data","formatImageUrl","key","queryAsString","join","formatNumber","number","precision","delimiter","thousands","decimal","n","Math","pow","round","a","b","String","reversedArray","reverse","segments","unshift","diff","formatPrice","formattedNumber","symbol","format","exports"],"sources":["D:/project/Recode-Team/Frontend/node_modules/clayful/lib/clayful/index.js"],"sourcesContent":["const ClayfulError = require('../clayful-error');\r\nconst assign = require('../util/assign');\r\n\r\nconst Clayful = {\r\n\tbaseUrl:        'https://api.clayful.io',  // base url for API request\r\n\tdefaultHeaders: {},                        // extra headers to extend default request headers\r\n\tplugins: {\r\n\t\trequest: null                          // request middleware\r\n\t},\r\n\tlisteners: {\r\n\t\trequest:  [],\r\n\t\tresponse: []\r\n\t},\r\n\tPromise: typeof Promise === 'function' ? Promise : null\r\n};\r\n\r\nClayful.optionsToHeaders = (o = {}) => {\r\n\r\n\tconst headers = {};\r\n\r\n\tif (o.language) {\r\n\t\theaders['Accept-Language'] = o.language;\r\n\t}\r\n\r\n\tif (o.currency) {\r\n\t\theaders['Accept-Currency'] = o.currency;\r\n\t}\r\n\r\n\tif (o.timeZone) {\r\n\t\theaders['Accept-Time-Zone'] = o.timeZone;\r\n\t}\r\n\r\n\tif (o.client) {\r\n\t\theaders['Authorization'] = `Bearer ${ o.client }`;\r\n\t}\r\n\r\n\tif (o.customer) {\r\n\t\theaders['Authorization-Customer'] = o.customer;\r\n\t}\r\n\r\n\tif (o.reCAPTCHA) {\r\n\t\theaders['reCAPTCHA-Response'] = o.reCAPTCHA;\r\n\t}\r\n\r\n\tif (o.debugLanguage) {\r\n\t\theaders['Accept-Debug-Language'] = o.debugLanguage;\r\n\t}\r\n\r\n\tif (o.headers) {\r\n\t\tassign(headers, o.headers);\r\n\t}\r\n\r\n\treturn headers;\r\n\r\n};\r\n\r\nClayful.getEndpoint = path => `${ Clayful.baseUrl }${ path }`;\r\n\r\nClayful.normalizeQueryValues = (query = {}) => {\r\n\r\n\treturn query;\r\n\r\n};\r\n\r\nClayful.wrapRequestCallback = extracted => (err, response = null) => {\r\n\r\n\tif (err) {\r\n\t\tif (err.isClayful) {\r\n\t\t\t// ClayfulError case\r\n\t\t\textracted.error = err;\r\n\t\t\tClayful.trigger('response', extracted);\r\n\t\t}\r\n\t} else {\r\n\t\t// Success case\r\n\t\textracted.response = response;\r\n\t\tClayful.trigger('response', extracted);\r\n\t}\r\n\r\n\textracted.callback(err, response, extracted);\r\n};\r\n\r\nClayful.extractRequestArguments = options => {\r\n\r\n\tconst result = {\r\n\t\thttpMethod: options.httpMethod,\r\n\t\tpayload:    null,\r\n\t\tmeta:       {}\r\n\t};\r\n\r\n\tconst rest = options.args.slice(options.params.length);\r\n\r\n\tresult.requestUrl = options.params.reduce((requestUrl, param, i) => requestUrl.replace(`{${param}}`, options.args[i]), options.path);\r\n\tresult.callback = rest.pop();\r\n\r\n\tif (typeof result.callback !== 'function') {\r\n\r\n\t\trest.push(result.callback); // Restore rest array\r\n\t\tresult.callback = () => {}; // Put an empty function as default if the last argument isn't a function,\r\n\t\tresult.callback.Promise = Clayful.Promise;\r\n\t}\r\n\r\n\tif ((options.httpMethod === 'POST' ||\r\n\t\toptions.httpMethod === 'PUT') &&\r\n\t\t!options.withoutPayload) {\r\n\r\n\t\tresult.payload = rest.shift() || null;\r\n\t}\r\n\r\n\tconst queryHeaders = rest.shift() || {};\r\n\r\n\tresult.query = Clayful.normalizeQueryValues(queryHeaders.query || {});\r\n\tresult.headers = Clayful.optionsToHeaders(queryHeaders || {});\r\n\r\n\t// Set request meta\r\n\tresult.meta = queryHeaders.meta || {};\r\n\r\n\treturn result;\r\n\r\n};\r\n\r\nClayful.callAPI = options =>  {\r\n\r\n\tconst request = Clayful.plugins.request;\r\n\tconst extracted = Clayful.extractRequestArguments(options);\r\n\r\n\tassign(extracted, {\r\n\t\trequestUrl:   Clayful.getEndpoint(extracted.requestUrl),\r\n\t\tmodelName:    options.modelName,\r\n\t\tmethodName:   options.methodName,\r\n\t\tusesFormData: options.usesFormData,\r\n\t\terror:        null,\r\n\t\tresponse:     null,\r\n\t});\r\n\r\n\t// Extend & overide default headers before making a request\r\n\tconst copied = assign({}, Clayful.defaultHeaders);\r\n\r\n\textracted.headers = assign(copied, extracted.headers);\r\n\r\n\tClayful.trigger('request', extracted);\r\n\r\n\tconst wrappedCallback = Clayful.wrapRequestCallback(extracted);\r\n\r\n\tif (extracted.callback.Promise) {\r\n\t\twrappedCallback.Promise = extracted.callback.Promise;\r\n\t}\r\n\r\n\t// ClayfulError should be used for generating API errors from Clayful API\r\n\treturn request(extracted, ClayfulError, wrappedCallback);\r\n\r\n};\r\n\r\n// Abstracted API request method\r\nClayful.request = (request, callback) => {\r\n\r\n\tconst api = request.module || '';\r\n\tconst [model, method] = api.split('.');\r\n\r\n\tif (!api)                    throw new Error(`Request module name is required.`);\r\n\tif (!Clayful[model])         throw new Error(`Model '${ model }' doesn't exist.`);\r\n\tif (!Clayful[model][method]) throw new Error(`Method '${ method }' doesn't exist in ${ model }.`);\r\n\r\n\tconst apiSpec = Clayful[model]['_' + method]();\r\n\r\n\t// Set default values\r\n\trequest.params = request.params || {};\r\n\trequest.payload = request.payload || null;\r\n\t// Copy `request.options` and set `query` and `headers`\r\n\trequest.options = assign({\r\n\t\tquery:   request.query || {},\r\n\t\theaders: request.headers || {}\r\n\t}, request.options || {});\r\n\r\n\t// Build arguments.\r\n\t// Start with URL params.\r\n\tconst args = apiSpec.params.map(name => request.params[name] || '');\r\n\r\n\t// Set payload if it's needed\r\n\tif ((apiSpec.httpMethod === 'POST' ||\r\n\t\tapiSpec.httpMethod === 'PUT') &&\r\n\t\t!apiSpec.withoutPayload) {\r\n\r\n\t\targs.push(request.payload);\r\n\t}\r\n\r\n\t// Set query and headers\r\n\targs.push(request.options);\r\n\r\n\t// Set callback\r\n\tif (callback) {\r\n\t\targs.push(callback);\r\n\t}\r\n\r\n\t// Call API\r\n\treturn Clayful.callAPI(assign(apiSpec, { args }));\r\n\r\n};\r\n\r\n// Set model APIs\r\nClayful.setModels = models => {\r\n\r\n\tconst allModels = models(Clayful.callAPI);\r\n\r\n\t// Get all models - it can be useful to generate Promisified APIs\r\n\tClayful.models = () => {\r\n\r\n\t\tconst models = [];\r\n\r\n\t\tfor (const modelName in allModels) {\r\n\t\t\tmodels.push(modelName);\r\n\t\t}\r\n\r\n\t\treturn models;\r\n\r\n\t};\r\n\r\n\t// Extend clayful object with models and methods\r\n\treturn assign(Clayful, allModels);\r\n\r\n};\r\n\r\n// Configures SDK options\r\nClayful.config = (o = {}) => assign(Clayful.defaultHeaders, Clayful.optionsToHeaders(o));\r\n\r\n// Install plugins. e.g., request middleware\r\nClayful.install = (plugin, options) => {\r\n\r\n\tClayful.plugins[plugin] = Clayful.plugins[plugin] ?\r\n\t\t\t\t\t\t\t\tClayful.plugins[plugin](options) : // use plug-in as a factory function\r\n\t\t\t\t\t\t\t\toptions;                           // or use options as a factory function or a function\r\n\r\n};\r\n\r\n// Add event listeners\r\nClayful.on = (eventName, callback) => {\r\n\r\n\tconst listeners = Clayful.listeners[eventName];\r\n\r\n\tif (!listeners) return;\r\n\r\n\tlisteners.push(callback);\r\n\r\n};\r\n\r\n// Removes event listeners\r\nClayful.off = (eventName, callback) => {\r\n\r\n\tconst listeners = Clayful.listeners[eventName];\r\n\r\n\tconst index = listeners.indexOf(callback);\r\n\r\n\tlisteners.splice(index, 1);\r\n\r\n};\r\n\r\n// Triggers event listeners\r\nClayful.trigger = (eventName, data) => {\r\n\r\n\tconst listeners = Clayful.listeners[eventName];\r\n\r\n\tfor (let i = 0; i < listeners.length; i++) {\r\n\r\n\t\tlisteners[i](data);\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Utilities\r\n\r\nClayful.formatImageUrl = (baseUrl, options = {}) => {\r\n\r\n\tconst query = [];\r\n\r\n\tfor (const key in options) {\r\n\t\tquery.push(`${ key }=${ options[key] }`);\r\n\t}\r\n\r\n\tconst queryAsString = query.length ? '?' + query.join('&') : '';\r\n\r\n\treturn baseUrl + queryAsString;\r\n\r\n};\r\n\r\nClayful.formatNumber = (number, currency = {}) => {\r\n\r\n\tif (typeof number !== 'number') {\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\tconst { precision, delimiter = {} } = currency;\r\n\tconst { thousands = '', decimal = '.' } = delimiter;\r\n\r\n\tif (typeof precision === 'number') {\r\n\r\n\t\tconst n = Math.pow(10, precision);\r\n\r\n\t\tnumber = Math.round(number * n) / n;\r\n\r\n\t}\r\n\r\n\tlet [a, b = ''] = String(number).split('.');\r\n\r\n\tconst reversedArray = a.split('').reverse();\r\n\r\n\tconst segments = [];\r\n\r\n\twhile (reversedArray.length) {\r\n\r\n\t\tsegments.unshift(reversedArray.splice(0, 3).reverse().join(''));\r\n\r\n\t}\r\n\r\n\tif (precision) {\r\n\r\n\t\tconst diff = precision - b.length;\r\n\r\n\t\tfor (let i = 0; i < diff; i++) {\r\n\t\t\tb += '0';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn [segments.join(thousands), b].join(b ? decimal : '');\r\n\r\n};\r\n\r\nClayful.formatPrice = (number, currency = {}) => {\r\n\r\n\tconst formattedNumber = Clayful.formatNumber(number, currency);\r\n\r\n\tif (!formattedNumber) {\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\tconst { symbol = '', format = '{price}' } = currency;\r\n\r\n\treturn format\r\n\t\t\t.replace('{symbol}', symbol)\r\n\t\t\t.replace('{price}', formattedNumber);\r\n\r\n};\r\n\r\nmodule.exports = Clayful;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}