[{"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\index.js":"1","C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\App.js":"2","C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\pages\\CreateGroup.js":"3","C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\layouts\\Footer.js":"4","C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\layouts\\Header.js":"5","C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\pages\\Main.js":"6","C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\pages\\style_group.js":"7","C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\modals\\Login.js":"8","C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\modals\\SignUp.js":"9"},{"size":273,"mtime":1682187590628,"results":"10","hashOfConfig":"11"},{"size":782,"mtime":1682188336502,"results":"12","hashOfConfig":"11"},{"size":921,"mtime":1682188183053,"results":"13","hashOfConfig":"11"},{"size":345,"mtime":1682187590632,"results":"14","hashOfConfig":"11"},{"size":2373,"mtime":1682187590648,"results":"15","hashOfConfig":"11"},{"size":203,"mtime":1682187590763,"results":"16","hashOfConfig":"11"},{"size":1443,"mtime":1682189192564,"results":"17","hashOfConfig":"11"},{"size":2305,"mtime":1682187590683,"results":"18","hashOfConfig":"11"},{"size":4801,"mtime":1682187590699,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1rn6589",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"23"},"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\index.js",[],[],[],"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\App.js",[],[],"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\pages\\CreateGroup.js",[],[],"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\layouts\\Footer.js",[],[],"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\layouts\\Header.js",[],[],"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\pages\\Main.js",[],[],"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\pages\\style_group.js",[],[],"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\modals\\Login.js",[],[],"C:\\Users\\hyera\\OneDrive\\문서\\GitHub\\Frontend\\src\\modals\\SignUp.js",["49","50","51","52"],[],"import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Container } from 'react-bootstrap';\r\n\r\nexport const SignUp = ({ show, onHide }) => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n\r\n  const [emailMsg, setEmailMsg] = useState(\"\");\r\n  const [nameMsg, setNameMsg] = useState(\"\");\r\n  const [passwordMsg, setPasswordMsg] = useState(\"\");\r\n  const [passwordConfirmMsg, setPasswordConfirmMsg] = useState(\"\");\r\n\r\n  const [isEmail, setIsEmail] = useState(false);\r\n  const [isName, setIsName] = useState(false);\r\n  const [isPassword, setIsPassword] = useState(false);\r\n  const [isPasswordConfirm, setIsPasswordConfirm] = useState(false);\r\n\r\n  const onEmailHandler = (e) => {\r\n    const inputEmail = e.target.value;\r\n    setEmail(inputEmail);\r\n    const emailRegEx = /^[A-Za-z0-9]([-_.]?[A-Za-z0-9])*@[A-Za-z0-9]([-_.]?[A-Za-z0-9])*\\.[A-Za-z]{2,3}$/i;\r\n\r\n    if (!emailRegEx.test(inputEmail)) {\r\n      setEmailMsg(\"이메일의 형식이 올바르지 않습니다.\");\r\n      setIsEmail(false);\r\n    } else{\r\n      setEmailMsg(\"올바른 이메일 형식입니다.\");\r\n      setIsEmail(true);\r\n    }\r\n  }\r\n  const onNameHandler = (e) => {\r\n    const inputName = e.target.value;\r\n    setName(inputName);\r\n\r\n    if (inputName.length < 2 || inputName.length > 5) {\r\n      setNameMsg(\"2글자 이상 5글자 이하로 입력하세요.\");\r\n      setIsName(false);\r\n    } else {\r\n      setNameMsg(\"사용 가능한 닉네임입니다.\");\r\n      setIsName(true);\r\n    }\r\n  }\r\n  const onPasswordHandler = (e) => {\r\n    const inputPassword = e.target.value;\r\n    setPassword(inputPassword);\r\n    const passwordRegEx = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\r\n    \r\n    if (!passwordRegEx.test(inputPassword)) {\r\n      setPasswordMsg(\"숫자, 영문자, 특수문자를 조합하여 8자리 이상 입력하세요.\")\r\n      setIsPassword(false);\r\n    } else {\r\n      setPasswordMsg(\"안전한 비밀번호입니다.\");\r\n      setIsPassword(true);\r\n    }\r\n  }\r\n  const onPasswordConfirm = (e) => {\r\n    const inputPasswordConfirm = e.target.value;\r\n    setPasswordConfirm(inputPasswordConfirm);\r\n    \r\n    if (password !== inputPasswordConfirm) {\r\n      setPasswordConfirmMsg(\"비밀번호가 일치하지 않습니다.\");\r\n      setIsPasswordConfirm(false);\r\n    } else {\r\n      setPasswordConfirmMsg(\"비밀번호가 일치합니다.\");\r\n      setIsPasswordConfirm(true);\r\n    }\r\n  }\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const user = { email: email, name: name, password: password };\r\n\r\n    fetch('http://13.124.244.199:27000/api/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => console.log(\"results: \", result))\r\n      .catch(error => console.error(error));\r\n}\r\n\r\n  return (\r\n    <Modal\r\n      show = {show}\r\n      onHide = {onHide}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n    <Container>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          회원가입\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label></Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"이메일\" value={email} onChange={onEmailHandler}/>\r\n            <p align=\"right\">{emailMsg}</p>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label></Form.Label>\r\n            <Form.Control placeholder=\"닉네임\" value={name} onChange={onNameHandler}/>\r\n            <p align=\"right\">{nameMsg}</p>\r\n          </Form.Group>\r\n          \r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label></Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"비밀번호\" value={password} onChange={onPasswordHandler}/>\r\n            <p align=\"right\">{passwordMsg}</p>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label></Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"비밀번호 확인\" value={passwordConfirm} onChange={onPasswordConfirm} />\r\n            <p align=\"right\">{passwordConfirmMsg}</p>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" type=\"button\" onClick={onSubmitHandler}>\r\n          완료\r\n        </Button>\r\n        <Button onClick={onHide}>취소</Button>\r\n      </Modal.Footer>\r\n    </Container>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SignUp",{"ruleId":"53","severity":1,"message":"54","line":16,"column":10,"nodeType":"55","messageId":"56","endLine":16,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":17,"column":10,"nodeType":"55","messageId":"56","endLine":17,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":18,"column":10,"nodeType":"55","messageId":"56","endLine":18,"endColumn":20},{"ruleId":"53","severity":1,"message":"59","line":19,"column":10,"nodeType":"55","messageId":"56","endLine":19,"endColumn":27},"no-unused-vars","'isEmail' is assigned a value but never used.","Identifier","unusedVar","'isName' is assigned a value but never used.","'isPassword' is assigned a value but never used.","'isPasswordConfirm' is assigned a value but never used."]